{"version":3,"sources":["components/W12MNav.tsx","components/W12MHeader.tsx","components/W12MFooter.tsx","components/W12MForm.tsx","components/W12MHomeForm.tsx","generate_misdemeanours.ts","components/W12MTableItem.tsx","components/W12MTable.tsx","components/W12MMisdeamForm.tsx","components/W12MTextBox.tsx","components/W12MSelectBox.tsx","components/W12MTextAreaBox.tsx","components/W12MConfessionForm.tsx","Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Nav","activeStyle","textDecoration","color","normalStyle","className","style","width","to","isActive","W12MHeader","Footer","W12MForm","flex","W12MFooter","Home","MISDEMEANOURS","generateMisdemeanours","number","a","sleep","amount","misdemeanours","i","push","citizenId","Math","floor","rand","misdemeanour","choose","date","Date","toLocaleDateString","imagesrc","x","random","arr","length","milliseconds","Promise","resolve","setTimeout","TableItem","src","alt","Table","tabledata","map","item","PublicConfessionData","React","createContext","PublicConfessionDataUpdate","Misdeamnour","useState","setMisdemeanours","othermisdemeanours","setOthermisdemeanours","useEffect","generateMisdemeanourss","resp","Provider","value","TextBox","textboxObject","onChange","htmlFor","id","title","type","min","max","pattern","required","hidden","displayError","errMessage","SelectBox","selectboxObject","selected","option1","option2","option3","option4","option5","TextAreaBox","textareaObject","minLength","maxLength","Confession","useContext","textBox_subjectInfo","setTextBox_subjectInfo","selectBox_reasonOfContactInfo","setSelectBox_reasonOfContactInfo","textAreaBox_confessionDetailInfo","setTextAreaBox_confessionDetailInfo","dataOnSubmit","setDataOnSubmit","confessButtonEnabled","setConfessButtonEnabled","textBox_subject","data","selectBox_reasonOfContact","textAreaBox_confessionDetail","allTextBoxes","allSelectBoxes","allTextAreaBoxes","validate","fieldPattern","optionIndex","RegExp","test","onChangeTextBox","event","minNumber","Number","parseInt","target","maxNumber","onChangeSelectBox","options","selectedIndex","onChangeTextAreaBox","onSubmit","allValues","meDemnourNumber","split","concat","console","log","preventDefault","textbox","W12MTextBox","selectbox","W12MSelectBox","textareabox","W12MTextAreaBox","disabled","Router","path","element","index","W12MHomeForm","W12MMisdeamForm","W12MConfessionForm","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.211ac49a.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\n\r\nconst Nav: React.FC = () => {\r\n  const activeStyle = {\r\n    textDecoration: \"underline\",\r\n    color: \"blue\",\r\n  };\r\n  const normalStyle = {\r\n    color: \"purple\",\r\n  };\r\n\r\n  const activeClassName = \"underline\";\r\n\r\n  return (\r\n    <nav\r\n      className=\"is-flex is-flex-grow-1 is-align-items-center\"\r\n      style={{ width: \"100%\" }}\r\n    >\r\n      <ul\r\n        style={{ width: \"100%\" }}\r\n        className=\"is-flex is-flex-direction-row is-justify-content-space-evenly is-justify-content-space-evenly\"\r\n      >\r\n        <li>\r\n          <NavLink\r\n            to=\"/\"\r\n            style={({ isActive }) => (isActive ? activeStyle : normalStyle)}\r\n          >\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to=\"/misdeamnour\"\r\n            style={({ isActive }) => (isActive ? activeStyle : normalStyle)}\r\n          >\r\n            Misdemeanours\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to=\"/confession\"\r\n            style={({ isActive }) => (isActive ? activeStyle : normalStyle)}\r\n          >\r\n            Confess To Us\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import Nav from \"./W12MNav\";\r\n\r\nconst W12MHeader: React.FC = () => (\r\n  <header\r\n    data-testid=\"headerid\"\r\n    className=\"header has-background-primary is-flex is-align-items-center is-justify-content-center\"\r\n  >\r\n    <h1 className=\"title\">FakeLandia Justice Department</h1>\r\n    <Nav />\r\n  </header>\r\n);\r\n\r\nexport default W12MHeader;\r\n","const Footer: React.FC = () => (\r\n  <footer className=\"has-background-dark p-5 has-text-light has-text-centered\">\r\n    <p>&copy; copyright DB 2022</p>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import W12MHeader from \"./W12MHeader\";\r\nimport { Outlet } from \"react-router\";\r\nimport W12MFooter from \"./W12MFooter\";\r\n\r\nconst W12MForm: React.FC = () => {\r\n  return (\r\n    <>\r\n      <W12MHeader />\r\n      <main className=\"p-6\" style={{ flex: \"1\" }}>\r\n        <Outlet />\r\n      </main>\r\n      <W12MFooter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default W12MForm;\r\n","const Home: React.FC = () => {\r\n  return (\r\n    <section className=\"content\">\r\n      <p>Welcome to the home of the Justice Department of Fakelandia</p>\r\n      <p>\r\n        Here you can browse a list if recent misdemeanours committed by our\r\n        citizens, or you can confess to your own misdemeanour\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const MISDEMEANOURS = [\r\n    'rudeness',\r\n    'vegetables',\r\n    'lift',\r\n    'united',\r\n] as const;\r\n\r\n\r\n\r\nexport type Misdemeanour = typeof MISDEMEANOURS[number];\r\n\r\nexport type MisdemPropsTypes = {\r\n    citizenId: number;\r\n    misdemeanour: Misdemeanour;\r\n    date: string;\r\n    imagesrc: string;\r\n};\r\n\r\n\r\nexport default async function generateMisdemeanours(\r\n    number: number\r\n): Promise<Array<MisdemPropsTypes>> {\r\n    // pretend this is an API we're calling, wait 1.5s\r\n    await sleep(1500);\r\n\r\n    let amount = number ?? 50;\r\n\r\n    const misdemeanours = [];\r\n\r\n\r\n    for (let i = 0; i < amount; i++) {\r\n        misdemeanours.push({\r\n            citizenId: Math.floor(i + rand(37) * rand(967)),\r\n            misdemeanour: choose<Misdemeanour>([...MISDEMEANOURS]),\r\n            date: new Date().toLocaleDateString(),\r\n            imagesrc: \"https://picsum.photos/\" + 50 + i + \"/\" + 50 + i\r\n        });\r\n    }\r\n\r\n    return misdemeanours;\r\n}\r\n\r\nexport function rand(x: number): number {\r\n    return Math.random() * x;\r\n}\r\n\r\n/// take just one T from an array of T\r\nexport function choose<T>(arr: Array<T>): T {\r\n    if (!arr) arr = [];\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\n// In the real world, you wouldn't want to fake a 'sleep' like this, but for our purposes of faking an API\r\n// this quick-and-dirty solution will do the job.\r\nconst sleep = async (milliseconds: number) => {\r\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n};\r\n","import TableStruct from \"../data/table-struct\";\r\n\r\nconst TableItem: React.FC<TableStruct> = ({\r\n  citizenId,\r\n  misdemeanour,\r\n  date,\r\n  imagesrc,\r\n}: TableStruct) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <h5>{citizenId}</h5>\r\n      </td>\r\n      <td>\r\n        <h5>{misdemeanour}</h5>\r\n      </td>\r\n      <td>\r\n        <h5>{date}</h5>\r\n      </td>\r\n      <td>\r\n        <img src={imagesrc} alt=\"picsum image showing punishment\" />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n","import React from \"react\";\r\nimport TableItem from \"./W12MTableItem\";\r\nimport TableStruct from \"../data/table-struct\";\r\nimport Misdeamnour from \"./W12MMisdeamForm\";\r\n\r\ninterface TableProps {\r\n  tabledata: Array<TableStruct>;\r\n}\r\n\r\nexport const Table: React.FC<TableProps> = ({ tabledata }: TableProps) => {\r\n  return (\r\n    <div className=\"table__container\">\r\n      <table>\r\n        <tbody>\r\n          <tr className=\"table__header\">\r\n            <td>\r\n              <h4>Citizen ID</h4>\r\n            </td>\r\n            <td>\r\n              <h4>Misdemeanour</h4>\r\n            </td>\r\n            <td>\r\n              <h4>Date</h4>\r\n            </td>\r\n            <td>\r\n              <h4>Punishment Idea</h4>\r\n            </td>\r\n          </tr>\r\n          {tabledata.map((item) => {\r\n            return (\r\n              <TableItem\r\n                citizenId={item.citizenId}\r\n                date={item.date}\r\n                misdemeanour={item.misdemeanour}\r\n                imagesrc={item.imagesrc}\r\n              ></TableItem>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport generateMisdemeanours from \"src/generate_misdemeanours\";\r\nimport Table from \"./W12MTable\";\r\n//import axios from \"axios\";\r\nimport generateMisdemeanour, {\r\n  MISDEMEANOURS,\r\n  MisdemPropsTypes,\r\n} from \"../generate_misdemeanours\";\r\n\r\nexport const PublicConfessionData = React.createContext<\r\n  Array<MisdemPropsTypes>\r\n>([]);\r\nexport const PublicConfessionDataUpdate = React.createContext(([]) => {});\r\n\r\nconst Misdeamnour: React.FC = () => {\r\n  const [misdemeanours, setMisdemeanours] = useState<Array<MisdemPropsTypes>>(\r\n    []\r\n  );\r\n  const [othermisdemeanours, setOthermisdemeanours] = useState<\r\n    Array<MisdemPropsTypes>\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    generateMisdemeanourss();\r\n  }, []);\r\n\r\n  const generateMisdemeanourss = async () => {\r\n    const resp = await generateMisdemeanours(10);\r\n    if (!othermisdemeanours) resp.push(othermisdemeanours[0]);\r\n    setMisdemeanours(resp);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PublicConfessionData.Provider value={othermisdemeanours}>\r\n        <PublicConfessionDataUpdate.Provider value={setOthermisdemeanours}>\r\n          <Table tabledata={misdemeanours} />\r\n        </PublicConfessionDataUpdate.Provider>\r\n      </PublicConfessionData.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Misdeamnour;\r\n","import React from \"react\";\r\nimport TextBoxStructure from \"../data/textbox-struct\";\r\n\r\ninterface TextBoxProps {\r\n  textboxObject: TextBoxStructure;\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst TextBox: React.FC<TextBoxProps> = ({ textboxObject, onChange }) => {\r\n  return (\r\n    <div>\r\n      <label className=\"form-control\" htmlFor={textboxObject.id}>\r\n        {textboxObject.title}\r\n      </label>\r\n      <input\r\n        className=\"form-control\"\r\n        data-testid={textboxObject.id}\r\n        type=\"text\"\r\n        min={textboxObject.min}\r\n        max={textboxObject.max}\r\n        pattern={textboxObject.pattern}\r\n        onChange={onChange}\r\n        required\r\n      />\r\n      <p\r\n        data-testid=\"errormessage\"\r\n        hidden={!textboxObject.displayError}\r\n        className=\"error\"\r\n      >\r\n        {textboxObject.errMessage}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextBox;\r\n","import SelectBoxStructure from \"../data/selectbox-struct\";\r\n\r\ninterface SelectBoxProps {\r\n  selectboxObject: SelectBoxStructure;\r\n  onChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\r\n}\r\n\r\nconst SelectBox: React.FC<SelectBoxProps> = ({ selectboxObject, onChange }) => {\r\n  return (\r\n    <div>\r\n      <label className=\"form-control\" htmlFor={selectboxObject.id}>\r\n        {selectboxObject.title}\r\n      </label>\r\n      <select\r\n        className=\"form-control\"\r\n        data-testid={selectboxObject.id}\r\n        onChange={onChange}\r\n      >\r\n        <option selected>{selectboxObject.option1}</option>\r\n        <option>{selectboxObject.option2}</option>\r\n        <option>{selectboxObject.option3}</option>\r\n        <option>{selectboxObject.option4}</option>\r\n        <option>{selectboxObject.option5}</option>\r\n      </select>\r\n      <p\r\n        data-testid=\"errormessage\"\r\n        hidden={!selectboxObject.displayError}\r\n        className=\"error\"\r\n      >\r\n        {selectboxObject.errMessage}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectBox;\r\n","import TextAreaStructure from \"../data/textarea-struct\";\r\n\r\ninterface TextAreaBoxProps {\r\n  textareaObject: TextAreaStructure;\r\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n}\r\n\r\nconst TextAreaBox: React.FC<TextAreaBoxProps> = ({\r\n  textareaObject,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <label className=\"form-control\" htmlFor={textareaObject.id}>\r\n        {textareaObject.title}\r\n      </label>\r\n      <p>\r\n        <textarea\r\n          className=\"form-control\"\r\n          data-testid={textareaObject.id}\r\n          minLength={textareaObject.min}\r\n          maxLength={textareaObject.max}\r\n          onChange={onChange}\r\n          required\r\n        ></textarea>\r\n      </p>\r\n      <p\r\n        data-testid=\"errormessage\"\r\n        hidden={!textareaObject.displayError}\r\n        className=\"error\"\r\n      >\r\n        {textareaObject.errMessage}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextAreaBox;\r\n","import React, { useState, useMemo, useContext } from \"react\";\r\nimport W12MTextBox from \"./W12MTextBox\";\r\nimport W12MSelectBox from \"./W12MSelectBox\";\r\nimport W12MTextAreaBox from \"./W12MTextAreaBox\";\r\nimport data from \"../data/data.json\";\r\nimport Misdeamnour, {\r\n  PublicConfessionData,\r\n  PublicConfessionDataUpdate,\r\n} from \"./W12MMisdeamForm\";\r\nimport generateMisdemeanour, {\r\n  MISDEMEANOURS,\r\n  MisdemPropsTypes,\r\n  choose,\r\n  rand,\r\n} from \"../generate_misdemeanours\";\r\n\r\nconst Confession: React.FC = () => {\r\n  const othermisdemeanours = useContext(PublicConfessionData);\r\n  const setOthermisdemeanours = useContext(PublicConfessionDataUpdate);\r\n  const [textBox_subjectInfo, setTextBox_subjectInfo] = useState<string>(\"\");\r\n  const [selectBox_reasonOfContactInfo, setSelectBox_reasonOfContactInfo] =\r\n    useState<string>(\"\");\r\n  const [\r\n    textAreaBox_confessionDetailInfo,\r\n    setTextAreaBox_confessionDetailInfo,\r\n  ] = useState<string>(\"\");\r\n  const [dataOnSubmit, setDataOnSubmit] = useState<string>(\"\");\r\n  const [confessButtonEnabled, setConfessButtonEnabled] = useState(false);\r\n\r\n  const textBox_subject = data.textBox_subject;\r\n  const selectBox_reasonOfContact = data.selectBox_reasonOfContact;\r\n  const textAreaBox_confessionDetail = data.textAreaBox_confessionDetail;\r\n\r\n  const allTextBoxes = [textBox_subject];\r\n  const allSelectBoxes = [selectBox_reasonOfContact];\r\n  const allTextAreaBoxes = [textAreaBox_confessionDetail];\r\n\r\n  const validate = (\r\n    fieldPattern: string,\r\n    value: string,\r\n    min: number,\r\n    max: number,\r\n    optionIndex: number\r\n  ): boolean => {\r\n    let isPatternMatched = false;\r\n\r\n    if (fieldPattern.length > 0) {\r\n      const regEx = new RegExp(fieldPattern);\r\n      isPatternMatched = regEx.test(value);\r\n      if (!isPatternMatched) return true;\r\n    }\r\n\r\n    if (optionIndex !== -1) {\r\n      if (optionIndex !== 0) return true;\r\n    } else if (\r\n      min !== -1 &&\r\n      max !== -1 &&\r\n      (value.length < min || value.length > max)\r\n    )\r\n      return true;\r\n\r\n    return false;\r\n  };\r\n\r\n  const onChangeTextBox = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const minNumber = Number.parseInt(event.target.min);\r\n    const maxNumber = Number.parseInt(event.target.max);\r\n    allTextBoxes[0].displayError = validate(\r\n      event.target.pattern,\r\n      event.target.value,\r\n      minNumber,\r\n      maxNumber,\r\n      -1\r\n    );\r\n    setTextBox_subjectInfo(event.target.value);\r\n  };\r\n\r\n  const onChangeSelectBox = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectBox_reasonOfContactInfo(\r\n      event.target.options.selectedIndex + \",\" + event.target.value\r\n    );\r\n  };\r\n\r\n  const onChangeTextAreaBox = (\r\n    event: React.ChangeEvent<HTMLTextAreaElement>\r\n  ) => {\r\n    setTextAreaBox_confessionDetailInfo(event.target.value);\r\n    allTextAreaBoxes[0].displayError = validate(\r\n      \"\",\r\n      event.target.value,\r\n      event.target.minLength,\r\n      event.target.maxLength,\r\n      -1\r\n    );\r\n    if (!allTextAreaBoxes[0].displayError) setConfessButtonEnabled(true);\r\n  };\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    let allValues = \"\";\r\n    if (!allTextBoxes[0].displayError && !allTextAreaBoxes[0].displayError) {\r\n      let meDemnourNumber = 0;\r\n      meDemnourNumber = Number.parseInt(\r\n        selectBox_reasonOfContactInfo.split(\",\")[0]\r\n      );\r\n      if (!meDemnourNumber) meDemnourNumber = 0;\r\n      if (meDemnourNumber <= 3) {\r\n        const misdemeanours = [];\r\n        misdemeanours.push({\r\n          citizenId: 0,\r\n          misdemeanour: MISDEMEANOURS[meDemnourNumber],\r\n          date: new Date().toLocaleDateString(),\r\n          imagesrc: \"https://picsum.photos/50/50\",\r\n        });\r\n        setOthermisdemeanours(misdemeanours);\r\n      } else {\r\n        allValues = textBox_subjectInfo\r\n          .concat(\",\")\r\n          .concat(selectBox_reasonOfContactInfo.split(\",\")[1])\r\n          .concat(\",\")\r\n          .concat(textAreaBox_confessionDetailInfo);\r\n        setDataOnSubmit(allValues);\r\n        console.log(allValues);\r\n      }\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      data-testid=\"w12MConfessionForm\"\r\n      className=\"w12MConfessionForm\"\r\n    >\r\n      {allTextBoxes.map((textbox) => (\r\n        <W12MTextBox textboxObject={textbox} onChange={onChangeTextBox} />\r\n      ))}\r\n      {allSelectBoxes.map((selectbox) => (\r\n        <W12MSelectBox\r\n          selectboxObject={selectbox}\r\n          onChange={onChangeSelectBox}\r\n        />\r\n      ))}\r\n      {allTextAreaBoxes.map((textareabox) => (\r\n        <W12MTextAreaBox\r\n          textareaObject={textareabox}\r\n          onChange={onChangeTextAreaBox}\r\n        />\r\n      ))}\r\n      <input\r\n        type=\"submit\"\r\n        data-testid=\"submit\"\r\n        value=\"Confess\"\r\n        className=\"btn btn-primary\"\r\n        disabled={!confessButtonEnabled}\r\n      />\r\n      <p data-testid=\"data-onsubmit\">{dataOnSubmit}</p>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Confession;\r\n","import { Routes, Route } from \"react-router-dom\";\r\nimport W12MForm from \"./components/W12MForm\";\r\nimport W12MHomeForm from \"./components/W12MHomeForm\";\r\nimport W12MMisdeamForm from \"./components/W12MMisdeamForm\";\r\nimport W12MConfessionForm from \"./components/W12MConfessionForm\";\r\n\r\nconst Router = () => (\r\n  <Routes>\r\n    <Route path=\"/\" element={<W12MForm />}>\r\n      <Route index element={<W12MHomeForm />} />\r\n      <Route path=\"misdeamnour\" element={<W12MMisdeamForm />} />\r\n      <Route path=\"confession\" element={<W12MConfessionForm />} />\r\n      <Route path=\"*\" element={<p>Page 404</p>} />\r\n    </Route>\r\n  </Routes>\r\n);\r\n\r\nexport default Router;\r\n","import { BrowserRouter } from \"react-router-dom\";\r\nimport Router from \"./Router\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Router />\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}